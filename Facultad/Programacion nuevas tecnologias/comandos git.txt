# ir a una directorio de la pc y "clonar" el repositorio
git clone https://github.com/pablo-iglesias-ort/ejemplos-html-css-js.git

# desarrollar una cierta cantidad de cambios de mi aplicacion y verificar los archivos modificados
git status

# agregar los archivos que queremos (en general todos) a nuestro area de trabajo
git add archivo1.html archivo2.html
git add .

# veirificar que los archivos hayan sido agregados
git status

# confirmar los cambios LOCALMENTE y agregar un comentario que describa lo que representan
git commit -m "estos cambios son una prueba"

# obtener los cambios REMOTOS de otros colaboradores
git pull

# publicar los cambios REMOTAMENTE
git push

# crear una rama para trabajar en algunas funcionalidades sin modificar la rama principal (main o master)
git branch rama-de-prueba

# visualizar las ramas existentes y en cual estoy parado (indicada con *)
git branch --list

# cambiarse de rama para trabajar alli
git checkout -b rama-de-prueba

# confirmar que estoy parado en dicha rama (indicada con *)
git branch --list

# desarrollar una cierta cantidad de cambios de mi aplicacion y verificar los archivos modificados
git status

# agregar los archivos que queremos (en general todos) a nuestro area de trabajo
git add .

# sacar un cambio en un archivo de nuesta area de trabajo
git reset HEAD .\archivo.html

# deshacer el cambio anterior (volviendo atras el archivo)
git checkout -- .\4.html

# confirmar los cambios LOCALMENTE y agregar un comentario que describa lo que representan
git commit -m "cambios en la rama de prueba"

# visualizar los commits pendientes de publicar
git log origin/main..HEAD

# publicar un commit especifico en una rama nueva (no existente en el repositorio remoto)
git push https://github.com/pablo-iglesias-ort/ejemplos-html-css-js.git 933ddc5b90af1ae6a8bb3c08bcadf5ca10bb3724:refs/heads/rama-de-prueba

# publicar un commit especifico en una rama existente en el repositorio remoto
git push https://github.com/pablo-iglesias-ort/ejemplos-html-css-js.git da94707094793df80aa4464e9c85f6ddc258d929:rama-de-prueba

# publicar todos los commits pendientes de la rama en la que estoy
git push --set-upstream origin rama-de-prueba

# combinar una rama con otra (en este caso una rama con el main), revisar los commits y publicar
git checkout main
git merge rama-de-prueba
git log origin/main..HEAD
git push

# eliminar una rama local
git branch -d rama-html

# eliminar una rama en el repositorio remoto
git push origin --delete rama-html